int strcmp(char *str1, char *str2)  문자열 str1 과 str2비교 틀린 첫 문자의 아스키코드를 비교 
									str1 < str2 인 경우에는 음수 반환
									str1 > str2 인 경우에는 양수 반환
									str1 == str2 인 경우에는 0을 반환 합니다.


int strncmp(char *str1, char *str2, size_t n) strcmp의 기능에서 n번까지만 비교한다.


char *strcat (char *dest, char *src)    dest끝에 src를 붙임
										문자열 끝에있는 '\0' 이 사라지고 
										붙인다음 '\0' 다시붙여주어야함


char *strncat (char *dest, char *src, size_t n) dest끝에 src의 문자열 n개만 이어붙임 
												dest 문자열 끝을 가리키는 '\0' 
												기호의 위치에 '\0'을 없애고 origin의 문자 n번째 까지 
												붙여버리는 함수, 붙인다음 '\0' 다시붙여주어야함

char *strstr(char *str, char *to_find)	str 에서 to_find를 찾는다
										str에서 to_find의 첫 번째 표시 시작 위치에 대한 포인터를 리턴
										to_find가 str에 나타나지 않으면 strstr 함수는 NULL을 리턴 
										to_find가 길이가 0인 스트링을 가리키면 strstr 함수는 str을 리턴

										strlcat은 문자열 src 를 dst 의 끝에 추가해주는 함수이다.

size_t	strlcat(char *dst, const char *src, size_t size)

dst 의 마지막 위치에 src 을 size - strlen(dst) - 1 만큼 복사하고, 끝에 널문자를 삽입한다.
이후, 결합되는 문자열의 총 길이를 반환한다.
여기서 size는 대상 버퍼의 크기이고 size와 dst의 크기에 따라 반환값이 달라지게 된다.
size가 dst의 크기보다 작을 때, strlen(src) + size 를 반환한다.
size가 dst의 크기보다 클 때, strlen(src) + strlen(dst)를 반환한다.